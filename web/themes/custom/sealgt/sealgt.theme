<?php

/**
 * @file
 * Functions to support theming in the SEAL GT theme.
 */

use Drupal\safe_field_getter\SafeFieldGetter;

define ("BIO_PROFILE_DEFAULT_IMAGE", 'bio-placeholder.jpg');

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function sealgt_preprocess_html(array &$variables) {
  /* Add class to html tag */
  //$variables['html_attributes']->addClass('no-js');

  // Don't display the site name twice on the front page (and potentially others)
  /*if (isset($variables['head_title_array']['title']) && isset($variables['head_title_array']['name']) && ($variables['head_title_array']['title'] == $variables['head_title_array']['name'])) {
    $variables['head_title'] = $variables['head_title_array']['name'];
  }*/
}

/**
 * Implements hook_page_attachments_alter().
 */
function sealgt_page_attachments_alter(array &$page) {
  // Tell IE to use latest rendering engine (not to use compatibility mode).
  /*$ie_edge = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
    'http-equiv' => 'X-UA-Compatible',
    'content' => 'IE=edge',
    ],
  ];
  $page['#attached']['html_head'][] = [$ie_edge, 'ie_edge'];*/
}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function sealgt_preprocess_page(array &$variables) {
  $variables['sealgt_path'] = '/' . \Drupal::service('extension.list.theme')->getPath('sealgt') . '/images' .'/';
}

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function sealgt_theme_suggestions_page_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_theme_suggestions_node_alter().
 */
function sealgt_theme_suggestions_node_alter(array &$suggestions, array $variables) {
  /*$node = $variables['elements']['#node'];

  if ($variables['elements']['#view_mode'] == "full") {

  }*/
}

/**
 * Implements hook_preprocess_HOOK() for Block document templates.
 */
function sealgt_preprocess_block(array &$variables) {

}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function sealgt_theme_suggestions_field_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  $suggestions[] = 'field__' . $element['#view_mode'];
  $suggestions[] = 'field__' . $element['#view_mode'] . '__' . $element['#field_name'];*/
}

/**
 * Implements hook_theme_suggestions_field_alter().
 */
function sealgt_theme_suggestions_fieldset_alter(array &$suggestions, array $variables) {
  /*$element = $variables['element'];
  if (isset($element['#attributes']['class']) && in_array('form-composite', $element['#attributes']['class'])) {
    $suggestions[] = 'fieldset__form_composite';
  }*/
}

/**
 * Implements hook_preprocess_node().
 */
function sealgt_preprocess_node(array &$variables) {
  // Default to turning off byline/submitted.
  //$variables['display_submitted'] = FALSE;

  /** @var \Drupal\node\NodeInterface $node */
  $node = $variables['node'];
  $bundle = $node->bundle();
  $variables['attributes']['class'][] = $bundle;
  switch ($bundle) {
    case 'hero_sliders':
      // Check if the node has the banner hero field.
      if ($node->hasField('field_media_image')) {
        $variables['image_url'] = SafeFieldGetter::getUrlFromMediaField($node, 'field_media_image', 'slider');
      }
      $variables['content_attributes']['class'][] = 'text-content';
      break;
    case 'biography':
      // Provide a default image
      $variables['bio_image'] = '/themes/custom/sealgt/images/' . BIO_PROFILE_DEFAULT_IMAGE;
      // Check if the node has the bio image field.
      if ($node->hasField('field_image')) {
        $file = SafeFieldGetter::firstReference($node, 'field_image');
        if ($file) {
          $variables['bio_image'] = SafeFieldGetter::getUrlFromFile($file, 'bio_image');
        }
      }
      break;
    case 'article' :
      // Add formatted created date for display.
      $date_formatter = \Drupal::service('date.formatter');
      $created = $node->getCreatedTime();
      $variables['created_date'] = $date_formatter->format($created, 'article_date');
      break;
  }

}

/**
 * Implements hook_theme_suggestions_views_view_alter().
 */
function sealgt_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_form().
 */
function sealgt_preprocess_form(array &$variables) {
  //$variables['attributes']['novalidate'] = 'novalidate';
}

/**
 * Implements hook_preprocess_select().
 */
function sealgt_preprocess_select(array &$variables) {
  //$variables['attributes']['class'][] = 'select-chosen';
}

/**
 * Implements hook_preprocess_field().
 */
function sealgt_preprocess_field(array &$variables, $hook) {
  /*switch ($variables['element']['#field_name']) {
  }*/
}

/**
 * Implements hook_preprocess_details().
 */
function sealgt_preprocess_details(array &$variables) {
  /*$variables['attributes']['class'][] = 'details';
  $variables['summary_attributes']['class'] = 'summary';*/
}

/**
 * Implements hook_theme_suggestions_details_alter().
 */
function sealgt_theme_suggestions_details_alter(array &$suggestions, array $variables) {

}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function sealgt_preprocess_menu_local_task(array &$variables) {
  //$variables['element']['#link']['url']->setOption('attributes', ['class'=>'rounded']);
}
